{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "options": {
        "cwd": "${workspaceFolder}"
    },
    "tasks": [
        {
            "label": "crosscompile", // 任务名称，与launch.json的preLaunchTask相对应
            
            "command": "/home/wsx/work/gcc-3.4.5-glibc-2.3.6/bin/arm-linux-gcc", // 要使用的编译器, C++就写g++
         //  "command": "gcc",   // 生成在linux 下可执行程序
            "args": [
                "-g",
                // "-m32",  // 这个在编译输出linunx 平台下可执行程序时用到
                // "${file}",     // 这样写的意思是当前工程中的active file
                "hello.c",  // 这样写没跑了，就是当前目录下的这个文件
                "src/test.c",  // 这个参数集合中每一项分别对应命令行中的每一项
                "-Iinclude/",
                "-o", // 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
                //  "${fileDirname}/${fileBasenameNoExtension}",  //当前活跃文件夹下生成当前活跃文件名的可执行程序
                "hello_exe",
                "-Wall", // 开启额外警告
                "-static-libgcc", // 静态链接
                "-std=c99" // C语言最新标准为c11，或根据自己的需要进行修改比如C++17
            ], // 编译命令参数
            "type": "shell", // 可以为shell或process，前者相当于先打开shell再输入命令，后者是直接运行命令
            "group": {
                "kind": "build",
                "isDefault": true // 设为false可做到一个tasks.json配置多个编译指令，需要自己修改本文件，我这里不多提
            },
            "presentation": {
                "echo": true,
                "reveal": "always", // 在“终端”中显示编译信息的策略，可以为always，silent，never。具体参见VSC的文档
                "focus": true, // 设为true后可以使执行task时焦点聚集在终端
                "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            },
            "problemMatcher": "$gcc"
        }
    ]
}
/*
{
    "tasks": [
        {
            "type": "shell",
            "label": "C/C++: gcc build active file",
            "command": "/usr/bin/gcc",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ],
    "version": "2.0.0"
}
*/